import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;

public class Solution1351 {
	public static Map<Long, Long> hash = new HashMap<>();
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		long n = Long.parseLong(st.nextToken());
		long p = Integer.parseInt(st.nextToken());
		long q = Integer.parseInt(st.nextToken());
		
		hash.put(0L, 1L);
		System.out.println(dp(n, p, q));
	}
	
	public static long dp(long n, long p, long q) {
		if(n == 0) return 1L;
		if(hash.containsKey(n)) return hash.get(n);
		long ip = n / p;
		long iq = n / q;
		long a_n = dp(ip, p, q) + dp(iq, p, q);
		hash.put(n, a_n);
		return a_n;
	}
}
